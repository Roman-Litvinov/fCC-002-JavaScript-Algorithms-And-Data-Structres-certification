// arrow functions can take arguments and act upon them, like so:
const doubler = (item) => item *2;
console.log("Doubler function in action:", doubler(15));

// if it's a single parameter, we can omit the parantheses around 
// the parameter in the function definition:
const tripler = item => item *3;
console.log("Tripler function in action:", tripler(15));

// you can pass more than 1 argument to an arrow function, like so:
const multiplier = (factor01, factor02) => factor01*factor02;
console.log("Multiplier function in action:", multiplier(15, 4));


// LESSON CHALLENGE
// re-write the function appending contents of array2 to array1
// so that it uses the arrow function syntax:
const myConcat = (arr1, arr2) => arr1.concat(arr2);
console.log(myConcat([1, 2], [3, 4, 5]));